
// MfcInvokeDLLDlg.cpp : 实现文件
//
#include<cstdlib>
#include "stdafx.h"
#include "MfcInvokeDLL.h"
#include "MfcInvokeDLLDlg.h"
#include "afxdialogex.h"
#include "invokeDLLH.h"


#ifdef _DEBUG
#define new DEBUG_NEW
#endif



// 用于应用程序“关于”菜单项的 CAboutDlg 对话框
class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};
CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}
void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}
BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CMfcInvokeDLLDlg 对话框
CMfcInvokeDLLDlg::CMfcInvokeDLLDlg(CWnd* pParent /*=NULL*/) : CDialogEx(CMfcInvokeDLLDlg::IDD, pParent), m_summand1(0), m_summand2(0), m_sum(0)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}
void CMfcInvokeDLLDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_SUMMAND_EDIT1, m_summand1);
	DDX_Text(pDX, IDC_SUMMAND_EDIT2, m_summand2);
	DDX_Text(pDX, IDC_SUM_EDIT, m_sum);
}
BEGIN_MESSAGE_MAP(CMfcInvokeDLLDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDOK, &CMfcInvokeDLLDlg::OnBnClickedOk)
	ON_BN_CLICKED(IDC_ADD, &CMfcInvokeDLLDlg::OnBnClickedAdd)	
	ON_COMMAND(ID_32773, &CMfcInvokeDLLDlg::On32773)
END_MESSAGE_MAP()


// CMfcInvokeDLLDlg 消息处理程序
BOOL CMfcInvokeDLLDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();
	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);
	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	

	// TODO:  在此添加额外的初始化代码
	CWnd::SetWindowPos(NULL, 0, 0, 600, 500, SWP_NOZORDER);
	m_Menu.LoadMenu(IDR_MENU1);
	SetMenu(&m_Menu);

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}
void CMfcInvokeDLLDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。
void CMfcInvokeDLLDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CMfcInvokeDLLDlg::OnQueryDragIcon()
{
	
	return static_cast<HCURSOR>(m_hIcon);
}

//点击确定按钮的响应事件
void CMfcInvokeDLLDlg::OnBnClickedOk()
{
	// TODO:  在此添加控件通知处理程序代码
	MessageBox(L"Goodbye World");
	CDialogEx::OnOK();
}
void CMfcInvokeDLLDlg::OnBnClickedAdd()
{
	// TODO:  在此添加控件通知处理程序代码
	UpdateData(TRUE);
	if (m_summand1 != NULL || m_summand2 != NULL)
	{
		m_sum = add(m_summand1, m_summand2);
	} 
	else
	{
		m_sum = -1;
	}
	UpdateData(FALSE);
}
void CMfcInvokeDLLDlg::On32773()
{
	// TODO:  在此添加命令处理程序代码
	CAboutDlg *aboutDlg = new CAboutDlg;
	aboutDlg->Create(MAKEINTRESOURCE(IDD_ABOUTBOX));
	aboutDlg->ShowWindow(SW_SHOW);
}
